import pandas as pd
import numpy as np
import talib
from binance.client import Client
from datetime import datetime

# Binance API credentials
api_key = 'veiqd07BuRmMlxy3eeRLLKNyDnFrIphTcqgSM7XTRUCzQWTyqxK4sPtfVZioaVHi'
api_secret = 'N4myBDNkkD203gxxpo8NLQgdZxdvzm7N7PpBjBU0DiTtctTLaFQEVev51N4P5R5g'

# Initialize Binance client
client = Client(api_key, api_secret)

# Symbol and time interval
symbol = 'BTCUSDT'
interval = Client.KLINE_INTERVAL_1HOUR

# Number of candles to retrieve
limit = 100

# Fetch historical data
klines = client.get_klines(symbol=symbol, interval=interval, limit=limit)

# Extracting closing prices
closing_prices = [float(kline[4]) for kline in klines]

# Converting timestamps to datetime objects
timestamps = [datetime.utcfromtimestamp(kline[0] / 1000) for kline in klines]

# Create a DataFrame
data = pd.DataFrame({'timestamp': timestamps, 'close': closing_prices})

# Calculate StochRSI
stochrsi = talib.STOCHRSI(data['close'], timeperiod=14, fastk_period=3, fastd_period=3, fastd_matype=0)

# Print StochRSI, K, and D values
print("StochRSI:", stochrsi)

